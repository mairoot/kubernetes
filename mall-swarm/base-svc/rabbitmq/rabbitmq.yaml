apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: rabbitmq
      nodePort: 30671
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: rabbitmq-management
      nodePort: 30672
      port: 15672
      protocol: TCP
      targetPort: 15672
  selector:
    app: rabbitmq
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: 'rabbitmq:3.10-management'
          ports:
            - name: tcp-5672
              containerPort: 5672
              protocol: TCP
            - name: http-15672
              containerPort: 15672
              protocol: TCP
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: password
          resources:
            limits:
              cpu: '1'
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: localtime
              readOnly: true
              mountPath: /etc/localtime
            - mountPath: /var/lib/rabbitmq/
              name: rabbitmq-claim
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: ''
        - name: rabbitmq-claim
          persistentVolumeClaim:
            claimName: rabbitmq-claim
